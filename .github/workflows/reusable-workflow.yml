name: Deploy Infrastructure Test 1

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to deploy to'
        required: true
      pulumi_azure_storage_account:
        description: 'The name of the Azure Storage Account to use for Pulumi state'
        required: true
      pulumi_working_directory:
        description: 'The directory containing the Pulumi project'
        required: true
    secrets:
      azure_credentials:
        description: 'The Azure credentials to use for deployment'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Parse Azure Credentials into Environment Variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.azure_credentials }}
        run: |
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
        shell: bash

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.azure_credentials }}
        
      - name: Check if Pulumi CLI is installed
        shell: bash
        id: pulumi-check
        run: pulumi version || echo "Pulumi CLI not found"

      - name: Install Pulumi CLI
        shell: bash
        if: steps.pulumi-check.outcome == 'failure'
        run: |
          curl -fsSL https://get.pulumi.com | sh
          echo "$HOME/.pulumi/bin" >> $GITHUB_PATH

      - name: Pulumi Login
        shell: bash
        env:
          AZURE_STORAGE_ACCOUNT: ${{ inputs.pulumi_azure_storage_account }}
        run: pulumi login --cloud-url azblob://pulumi-stacks

      - name: Get pulumi stack name
        shell: bash
        run: |
          echo "PULUMI_STACK_NAME=$(grep 'name:' ${{ inputs.pulumi_working_directory }}/Pulumi.yml | awk '{print $2}').${{ inputs.environment }}" >> $GITHUB_ENV

      - name: Ensure Pulumi Stack
        shell: bash
        run: |
          cd ${{ inputs.pulumi_working_directory }}
          pulumi stack select ${{ env.PULUMI_STACK_NAME}} || pulumi stack init ${{ env.PULUMI_STACK_NAME}}

      - name: Pulumi Up (Deploy)
        uses: pulumi/actions@v4
        with:
          command: up
          work-dir: ${{ inputs.pulumi_working_directory }}
          stack-name: ${{ env.PULUMI_STACK_NAME}}
          cloud-url: azblob://pulumi-stacks
          secrets-provider: passphrase
        env:
          PULUMI_CONFIG_PASSPHRASE: ""
          DEPLOY_ENVIRONMENT: ${{ inputs.environment }}