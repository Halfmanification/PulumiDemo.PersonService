name: Deploy Infrastructure

env:
  INFRASTRUCTURE_DIR: ./infrastructure

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      pulumi_azure_storage_account:
        type: string
        required: true

jobs:
  deploy-infrastructure:
    name: Deploy Infrastructure
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse Azure Credentials into Environment Variables
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
        run: |
          echo "ARM_CLIENT_ID=$( jq -r '.clientId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_CLIENT_SECRET=$( jq -r '.clientSecret' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_SUBSCRIPTION_ID=$( jq -r '.subscriptionId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV;
          echo "ARM_TENANT_ID=$( jq -r '.tenantId' <<< $AZURE_CREDENTIALS )" >> $GITHUB_ENV
        shell: bash

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
        
      - name: Check if Pulumi CLI is installed
        shell: bash
        id: pulumi-check
        run: pulumi version || echo "Pulumi CLI not found"

      - name: Install Pulumi CLI
        shell: bash
        if: steps.pulumi-check.outcome == 'failure'
        run: |
          curl -fsSL https://get.pulumi.com | sh
          echo "$HOME/.pulumi/bin" >> $GITHUB_PATH

      - name: Set Azure Storage Account environment variable
        run: |
          echo "AZURE_STORAGE_ACCOUNT=${{ inputs.pulumi_azure_storage_account }}" >> $GITHUB_ENV

      - name: Pulumi Login
        shell: bash
        run: pulumi login --cloud-url azblob://pulumi-stacks

      - name: Get pulumi stack name
        shell: bash
        run: |
          STACK_NAME=$(grep 'name:' ${{ env.INFRASTRUCTURE_DIR }}/Pulumi.yml | awk '{print $2}' | tr -d '[:space:]').${{ inputs.environment }}
          echo "PULUMI_STACK_NAME=$STACK_NAME" >> $GITHUB_ENV

      - name: Ensure Pulumi Stack
        shell: bash
        run: |
          cd ${{ env.INFRASTRUCTURE_DIR }}
          pulumi stack select ${{ env.PULUMI_STACK_NAME }} || pulumi stack init ${{ env.PULUMI_STACK_NAME }}

      - name: Pulumi Up (Deploy)
        uses: pulumi/actions@v5
        with:
          command: up
          work-dir: ${{ env.INFRASTRUCTURE_DIR }}
          stack-name: ${{ env.PULUMI_STACK_NAME}}
          cloud-url: azblob://pulumi-stacks
          secrets-provider: passphrase
        env:
          PULUMI_CONFIG_PASSPHRASE: "supersecret"
          DEPLOY_ENVIRONMENT: ${{ inputs.environment }}